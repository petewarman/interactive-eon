.graph-wrapper {

  display: none;

  @media(min-width: $mainBreakpoint) {
    display: block;
    position: relative;
    height: 160px;
    margin-bottom: 10px;
    overflow: visible;

    .labels {
      position: relative;
      width: 100%;
      overflow: visible;
      height: 20px;
      font-size: 0;
      white-space: nowrap;

      .label {
        display: inline-block;
        font-size: 14px;
        text-align: left;
        padding: 5px 0;
        position: relative;
        overflow: visible;

        &:first-of-type {
          .text {
            @include transform(translateX(0));
          }
        }

        &:last-of-type {
          .text {
            @include transform(translateX(-100%));
          }
        }

        .text {
          position: absolute;
          @include transform(translateX(-50%));
        }

      }
    }

    .graph {
      position: relative;
      //background-color: #FFF;

      background-image: url('#{$img-path}graph-bg.png');
      background-size: auto 100%;
      background-position: left center;
      background-repeat: repeat-x;

      height: 140px;
      box-sizing: border-box;
      //padding: 10px;

      border: 2px solid #333;
      > svg {
        position: relative;
        z-index: 5;
        overflow: visible;

        .ct-line {
          stroke: $bgPink;
          stroke-width: 7px;
        }

        .ct-point {
          display: none;
        }

        .node {

          //$side: 24px;

          @include css3-prefix(transform-origin, center center);
          cursor: pointer;
          overflow: visible;

          .group-rotate,
          .group-scale {
            @include css3-prefix(transform-origin, center center);
            @include css3-prefix(transition-duration, 0.3s);
            @include css3-prefix(transition-property, transform);
            @include transform(scale(1, 1));
          }

          .no-firefox & {
            &:hover {
              .group-scale {
                @include css3-prefix(transform-origin, center center);

                @include transform(scale(1.15, 1.15));
              }
            }

            &.current {
              .group-scale {
                @include css3-prefix(transform-origin, center center);
                @include transform(scale(1.5, 1.5));
              }
            }
          }

          .tick {
            opacity: 0;
            @include css3-prefix(transition-duration, 0.4s);
          }

          &.done {
            .tick {
              opacity: 1;
            }
          }

          &.bad {
            .fill {
              fill: #EAA3C6;
            }
          }

          &.medium {
            .fill {
              fill: #FDEE63;
            }
          }

          &.good {
            .fill {
              fill: #CAE0F5;
            }
          }
        }

      }

      .bg {
        position: absolute;
        background-color: blue;
        height: 140px;
        width: 100%;
        top: 0;
        left: 0;
        z-index: 1;
      }

    }

  }

}